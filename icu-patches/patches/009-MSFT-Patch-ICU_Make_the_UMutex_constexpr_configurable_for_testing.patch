From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jeff Genovy <29107334+jefgen@users.noreply.github.com>
Date: Wed, 8 Apr 2020 18:52:57 -0700
Subject: [PATCH] Add macro to control toggling the constexpr of the UMutex
 class.

In order to enable testing (in automated CI builds), we make the ICU macro
UMUTEX_CONSTEXPR compile-time configurable via the macro FORCE_DISABLE_UMUTEX_CONSTEXPR.

This allows us to selectively disable the constexpr in order to catch any static globals.
---
 icu/icu/icu4c/source/common/umutex.h | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/icu/icu/icu4c/source/common/umutex.h b/icu/icu/icu4c/source/common/umutex.h
index 636a9956..ad67fb37 100644
--- a/icu/icu/icu4c/source/common/umutex.h
+++ b/icu/icu/icu4c/source/common/umutex.h
@@ -184,6 +184,11 @@ template<class T> void umtx_initOnce(UInitOnce &uio, void (U_CALLCONV *fp)(T, UE
     }
 }
 
+// MSFT-PATCH: In order to enable testing (in automated CI builds), we make this macro
+// configurable so that we can selectively disable it in order to catch any static globals.
+#if defined(FORCE_DISABLE_UMUTEX_CONSTEXPR)
+#   define UMUTEX_CONSTEXPR
+#else
 // UMutex should be constexpr-constructible, so that no initialization code
 // is run during startup.
 // This works on all C++ libraries except MS VS before VS2019.
@@ -194,6 +199,7 @@ template<class T> void umtx_initOnce(UInitOnce &uio, void (U_CALLCONV *fp)(T, UE
 #else
 #   define UMUTEX_CONSTEXPR constexpr
 #endif
+#endif /* #if defined(FORCE_DISABLE_UMUTEX_CONSTEXPR) */
 
 /**
  * UMutex - ICU Mutex class.
-- 
2.19.2


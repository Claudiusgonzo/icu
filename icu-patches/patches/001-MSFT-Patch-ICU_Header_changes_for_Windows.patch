From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jeff Genovy <29107334+jefgen@users.noreply.github.com>
Date: Fri, 19 Apr 2019 12:14:41 -0700
Subject: [MSFT-PATCH] Modify the ICU headers to omit things we don't want in the
 Windows public SDK.


diff --git a/icu/icu/icu4c/source/common/unicode/putil.h b/icu/icu/icu4c/source/common/unicode/putil.h
index 759b136c13e4ac819f55efe0260cfc363f8419ec..0be4af32e4e3929d87be8771171e9cf2030ca3fc 100644
--- a/icu/icu/icu4c/source/common/unicode/putil.h
+++ b/icu/icu/icu4c/source/common/unicode/putil.h
@@ -42,6 +42,8 @@
  * functions may have to be re-implemented.
  */
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: The Windows OS version of ICU uses a single fixed data file.
+
 /**
  * Return the ICU data directory. 
  * The data directory is where common format ICU data files (.dat files)
@@ -112,7 +113,8 @@ U_INTERNAL const char * U_EXPORT2 u_getTimeZoneFilesDirectory(UErrorCode *status
 U_INTERNAL void U_EXPORT2 u_setTimeZoneFilesDirectory(const char *path, UErrorCode *status);
 #endif  /* U_HIDE_INTERNAL_API */
+
+
+// TODO: Should these be considered for Windows?
 /**
  * @{
  * Filesystem file and path separator characters.
@@ -134,6 +136,7 @@ U_INTERNAL void U_EXPORT2 u_setTimeZoneFilesDirectory(const char *path, UErrorCo
 #   define U_FILE_ALT_SEP_STRING "/"
 #   define U_PATH_SEP_STRING ":"
 #endif
+//IGNORE_WINDOWS_HEADERS_END
 
 /** @} */

diff --git a/icu/icu/icu4c/source/common/unicode/unistr.h b/icu/icu/icu4c/source/common/unicode/unistr.h
index bf954b5f1d82321e0cdce7932b632413de54f865..484582a74d29e5c71f46edf2deeb900af999b081 100644
--- a/icu/icu/icu4c/source/common/unicode/unistr.h
+++ b/icu/icu/icu4c/source/common/unicode/unistr.h
@@ -55,6 +55,8 @@ class Edits;
 
 U_NAMESPACE_END
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: Hiding the @internal API below.
+
 // Not #ifndef U_HIDE_INTERNAL_API because UnicodeString needs the UStringCaseMapper.
 /**
  * Internal string case mapping function type.
@@ -72,6 +74,8 @@ UStringCaseMapper(int32_t caseLocale, uint32_t options,
                   icu::Edits *edits,
                   UErrorCode &errorCode);
 
+//IGNORE_WINDOWS_HEADERS_END
+
 U_NAMESPACE_BEGIN
 
 class Locale;               // unicode/locid.h
